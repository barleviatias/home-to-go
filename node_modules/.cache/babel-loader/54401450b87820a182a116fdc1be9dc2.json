{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bar-PC\\\\Desktop\\\\sprint 4\\\\src\\\\cmps\\\\Upload.jsx\";\nimport { Component } from 'react';\nimport { cloudinaryService } from '../services/cloudinary-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imgUrl: null,\n      height: 60,\n      width: 60,\n      isUploading: false\n    };\n\n    this.uploadImg = async ev => {\n      this.setState({\n        isUploading: true\n      });\n      const {\n        secure_url,\n        height,\n        width\n      } = await cloudinaryService.uploadImg(ev);\n      this.setState({\n        isUploading: false,\n        imgUrl: secure_url,\n        height,\n        width\n      }, () => {\n        this.props.onUploadImg(this.state);\n      });\n    };\n  }\n\n  get uploadMsg() {\n    const {\n      imgUrl,\n      isUploading\n    } = this.state;\n    if (imgUrl) return 'Upload Another?';\n    return isUploading ? 'Uploading....' : 'Upload Image';\n  }\n\n  render() {\n    const {\n      imgUrl,\n      width,\n      height\n    } = this.state;\n    const previewStyle = {\n      backgroundImage: `url(${imgUrl})`,\n      width,\n      height\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-preview\",\n      style: previewStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imgUpload\",\n        children: this.uploadMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.uploadImg,\n        accept: \"img/*\",\n        id: \"imgUpload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/cmps/Upload.jsx"],"names":["Component","cloudinaryService","Upload","state","imgUrl","height","width","isUploading","uploadImg","ev","setState","secure_url","props","onUploadImg","uploadMsg","render","previewStyle","backgroundImage"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,WAAW,EAAE;AAJP,KAD4B;;AAAA,SAOpCC,SAPoC,GAOxB,MAAOC,EAAP,IAAc;AACxB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,YAAM;AAAEI,QAAAA,UAAF;AAAcN,QAAAA,MAAd;AAAsBC,QAAAA;AAAtB,UAAgC,MAAML,iBAAiB,CAACO,SAAlB,CAA4BC,EAA5B,CAA5C;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE,KAAf;AAAsBH,QAAAA,MAAM,EAAEO,UAA9B;AAA0CN,QAAAA,MAA1C;AAAkDC,QAAAA;AAAlD,OAAd,EAAwE,MAAI;AAAC,aAAKM,KAAL,CAAWC,WAAX,CAAuB,KAAKV,KAA5B;AAAmC,OAAhH;AACD,KAXmC;AAAA;;AAYvB,MAATW,SAAS,GAAG;AACd,UAAM;AAAEV,MAAAA,MAAF;AAAUG,MAAAA;AAAV,QAA0B,KAAKJ,KAArC;AACA,QAAIC,MAAJ,EAAY,OAAO,iBAAP;AACZ,WAAOG,WAAW,GAAG,eAAH,GAAqB,cAAvC;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,MAAF;AAAUE,MAAAA,KAAV;AAAiBD,MAAAA;AAAjB,QAA4B,KAAKF,KAAvC;AACA,UAAMa,YAAY,GAAG;AACnBC,MAAAA,eAAe,EAAG,OAAMb,MAAO,GADZ;AAEnBE,MAAAA,KAFmB;AAGnBD,MAAAA;AAHmB,KAArB;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAGW,YAAxC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,GAAG,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA,kBAA6B,KAAKF;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAG,KAAKN,SAAnC;AAA+C,QAAA,MAAM,EAAC,OAAtD;AAA8D,QAAA,EAAE,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA/BmC","sourcesContent":["import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/cloudinary-service'\r\n\r\nexport class Upload extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 60,\r\n    width: 60,\r\n    isUploading: false\r\n  }\r\n  uploadImg = async (ev) => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev)\r\n    this.setState({ isUploading: false, imgUrl: secure_url, height, width },()=>{this.props.onUploadImg(this.state)})\r\n  }\r\n  get uploadMsg() {\r\n    const { imgUrl, isUploading } = this.state\r\n    if (imgUrl) return 'Upload Another?'\r\n    return isUploading ? 'Uploading....' : 'Upload Image'\r\n  }\r\n  render() {\r\n    const { imgUrl, width, height } = this.state\r\n    const previewStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n      width,\r\n      height\r\n    }\r\n    return (\r\n      <div className=\"upload-preview\" style={ previewStyle } >\r\n        <img src=\"\" alt=\"\" />\r\n        <label htmlFor=\"imgUpload\">{ this.uploadMsg }</label>\r\n        <input type=\"file\" onChange={ this.uploadImg } accept=\"img/*\" id=\"imgUpload\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}