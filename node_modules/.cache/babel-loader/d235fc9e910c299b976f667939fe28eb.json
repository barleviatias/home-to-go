{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bar-PC\\\\Desktop\\\\sprint 4\\\\src\\\\pages\\\\LoginSignup.jsx\";\n// import { faSignInAlt, faUserPlus } from '@fortawesome/free-solid-svg-icons'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadUsers, removeUser, login, logout, signup } from '../store/actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass _LoginSignup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      msg: '',\n      loginCred: {\n        username: '',\n        password: ''\n      },\n      signupCred: {\n        username: '',\n        password: '',\n        fullname: '',\n        email: ''\n      },\n      formType: 'login'\n    };\n\n    this.loginHandleChange = ev => {\n      const {\n        name,\n        value\n      } = ev.target;\n      this.setState(prevState => ({\n        loginCred: { ...prevState.loginCred,\n          [name]: value\n        }\n      }));\n    };\n\n    this.signupHandleChange = ev => {\n      const {\n        name,\n        value\n      } = ev.target;\n      this.setState(prevState => ({\n        signupCred: { ...prevState.signupCred,\n          [name]: value\n        }\n      }));\n    };\n\n    this.doLogin = async ev => {\n      ev.preventDefault();\n      const {\n        username,\n        password\n      } = this.state.loginCred;\n\n      if (!username) {\n        return this.setState({\n          msg: 'Please enter user/password'\n        });\n      }\n\n      const userCreds = {\n        username,\n        password\n      };\n\n      try {\n        this.props.login(userCreds);\n        this.setState({\n          loginCred: {\n            username: '',\n            password: ''\n          }\n        }, this.props.history.push('/'));\n      } catch (err) {\n        this.setState({\n          msg: 'Login failed, try again.'\n        });\n      }\n    };\n\n    this.doSignup = async ev => {\n      ev.preventDefault();\n      const {\n        username,\n        password,\n        fullname,\n        email\n      } = this.state.signupCred;\n\n      if (!username || !password || !fullname || !email) {\n        return this.setState({\n          msg: 'All inputs are required'\n        });\n      }\n\n      const signupCreds = {\n        username,\n        password,\n        fullname,\n        email\n      };\n      this.props.signup(signupCreds);\n      this.setState({\n        signupCred: {\n          username: '',\n          password: '',\n          fullname: '',\n          email: ''\n        }\n      }, this.props.history.push('/'));\n    };\n\n    this.removeUser = userId => {\n      this.props.removeUser(userId);\n    };\n\n    this.toggleFormType = () => {\n      const currForm = this.state.formType;\n      const nextForm = currForm === 'login' ? 'signup' : 'login';\n      this.setState({\n        formType: nextForm\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadUsers();\n  }\n\n  render() {\n    let signupSection = /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: this.doSignup,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fullname\",\n        value: this.state.signupCred.fullname,\n        onChange: this.signupHandleChange,\n        placeholder: \"Full name\",\n        autoComplete: \"fullname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.signupCred.password,\n        onChange: this.signupHandleChange,\n        placeholder: \"Password\",\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.signupCred.username,\n        onChange: this.signupHandleChange,\n        placeholder: \"Username\",\n        autoComplete: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: this.state.signupCred.email,\n        onChange: this.signupHandleChange,\n        placeholder: \"email\",\n        autoComplete: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-btn\",\n        type: \"submit\",\n        children: \"sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"toggle-form-btn\",\n        onClick: this.toggleFormType,\n        children: [' ', \"I already have an account\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this);\n\n    let loginSection = /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: this.doLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        autoComplete: \"off\",\n        value: this.state.loginCred.username,\n        onChange: this.loginHandleChange,\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        autoComplete: \"off\",\n        value: this.state.loginCred.password,\n        onChange: this.loginHandleChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-btn\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"toggle-form-btn\",\n        onClick: this.toggleFormType,\n        children: \"New user?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"forgot-password-btn\",\n        onClick: () => {\n          alert('Tough Luck');\n        },\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this);\n\n    const {\n      loggedInUser\n    } = this.props;\n    const {\n      formType\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"login-container page\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this), loggedInUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.logout,\n        children: \"logged out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-forms-container\",\n        children: [!loggedInUser && formType === 'login' && loginSection, !loggedInUser && formType === 'signup' && signupSection]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this), loggedInUser && loggedInUser.isAdmin && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"admin\",\n        children: /*#__PURE__*/_jsxDEV(\"details\", {\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.loadUsers,\n            children: \"Refresh Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 8\n          }, this), this.props.isLoading && 'Loading...', this.props.users && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.props.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n                children: JSON.stringify(user, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.removeUser(user._id);\n                },\n                children: [\"Remove \", user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 12\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.userModule.users,\n    loggedInUser: state.userModule.loggedInUser,\n    isLoading: state.systemModule.isLoading\n  };\n};\n\nconst mapDispatchToProps = {\n  login,\n  logout,\n  signup,\n  removeUser,\n  loadUsers\n};\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup);","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/pages/LoginSignup.jsx"],"names":["React","Component","connect","loadUsers","removeUser","login","logout","signup","_LoginSignup","state","msg","loginCred","username","password","signupCred","fullname","email","formType","loginHandleChange","ev","name","value","target","setState","prevState","signupHandleChange","doLogin","preventDefault","userCreds","props","history","push","err","doSignup","signupCreds","userId","toggleFormType","currForm","nextForm","componentDidMount","render","signupSection","loginSection","alert","loggedInUser","isAdmin","isLoading","users","map","user","JSON","stringify","_id","mapStateToProps","userModule","systemModule","mapDispatchToProps","LoginSignup"],"mappings":"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","sourcesContent":["// import { faSignInAlt, faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n\tloadUsers,\r\n\tremoveUser,\r\n\tlogin,\r\n\tlogout,\r\n\tsignup,\r\n} from '../store/actions/userActions';\r\n\r\nclass _LoginSignup extends Component {\r\n\tstate = {\r\n\t\tmsg: '',\r\n\t\tloginCred: {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t},\r\n\t\tsignupCred: {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tfullname: '',\r\n\t\t\temail: '',\r\n\t\t},\r\n\t\tformType: 'login',\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.loadUsers();\r\n\t}\r\n\r\n\tloginHandleChange = (ev) => {\r\n\t\tconst { name, value } = ev.target;\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tloginCred: {\r\n\t\t\t\t...prevState.loginCred,\r\n\t\t\t\t[name]: value,\r\n\t\t\t},\r\n\t\t}));\r\n\t};\r\n\r\n\tsignupHandleChange = (ev) => {\r\n\t\tconst { name, value } = ev.target;\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tsignupCred: {\r\n\t\t\t\t...prevState.signupCred,\r\n\t\t\t\t[name]: value,\r\n\t\t\t},\r\n\t\t}));\r\n\t};\r\n\r\n\tdoLogin = async (ev) => {\r\n\t\tev.preventDefault();\r\n\t\tconst { username, password } = this.state.loginCred;\r\n\t\tif (!username) {\r\n\t\t\treturn this.setState({ msg: 'Please enter user/password' });\r\n\t\t}\r\n\t\tconst userCreds = { username, password };\r\n\t\ttry {\r\n\t\t\tthis.props.login(userCreds);\r\n\t\t\tthis.setState(\r\n\t\t\t\t{ loginCred: { username: '', password: '' } },\r\n\t\t\t\tthis.props.history.push('/')\r\n\t\t\t);\r\n\t\t} catch (err) {\r\n\t\t\tthis.setState({ msg: 'Login failed, try again.' });\r\n\t\t}\r\n\t};\r\n\r\n\tdoSignup = async (ev) => {\r\n\t\tev.preventDefault();\r\n\t\tconst { username, password, fullname ,email} = this.state.signupCred;\r\n\t\tif (!username || !password || !fullname|| !email) {\r\n\t\t\treturn this.setState({ msg: 'All inputs are required' });\r\n\t\t}\r\n\t\tconst signupCreds = { username, password, fullname ,email };\r\n\t\tthis.props.signup(signupCreds);\r\n\t\tthis.setState(\r\n\t\t\t{ signupCred: { username: '', password: '', fullname: '' ,email:''} },\r\n\t\t\tthis.props.history.push('/')\r\n\t\t);\r\n\t};\r\n\r\n\tremoveUser = (userId) => {\r\n\t\tthis.props.removeUser(userId);\r\n\t};\r\n\r\n\ttoggleFormType = () => {\r\n\t\tconst currForm = this.state.formType;\r\n\t\tconst nextForm = currForm === 'login' ? 'signup' : 'login';\r\n\t\tthis.setState({ formType: nextForm });\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet signupSection = (\r\n\t\t\t<form className=\"login-form\" onSubmit={this.doSignup}>\r\n\t\t\t\t<h2>Sign Up</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"fullname\"\r\n\t\t\t\t\tvalue={this.state.signupCred.fullname}\r\n\t\t\t\t\tonChange={this.signupHandleChange}\r\n\t\t\t\t\tplaceholder=\"Full name\"\r\n\t\t\t\t\tautoComplete=\"fullname\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={this.state.signupCred.password}\r\n\t\t\t\t\tonChange={this.signupHandleChange}\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\tvalue={this.state.signupCred.username}\r\n\t\t\t\t\tonChange={this.signupHandleChange}\r\n\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tvalue={this.state.signupCred.email}\r\n\t\t\t\t\tonChange={this.signupHandleChange}\r\n\t\t\t\t\tplaceholder=\"email\"\r\n\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"signup-btn\" type=\"submit\">\r\n\t\t\t\t\tsign up\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"toggle-form-btn\"\r\n\t\t\t\t\tonClick={this.toggleFormType}\r\n\t\t\t\t>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tI already have an account\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t\tlet loginSection = (\r\n\t\t\t<form className=\"login-form\" onSubmit={this.doLogin}>\r\n\t\t\t\t<h2>Login</h2>\r\n\r\n\t\t\t\t{/* <select\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n        >\r\n          <option value=\"\">Select User</option>\r\n          {this.props.users && this.props.users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n        </select> */}\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={this.state.loginCred.username}\r\n\t\t\t\t\tonChange={this.loginHandleChange}\r\n\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={this.state.loginCred.password}\r\n\t\t\t\t\tonChange={this.loginHandleChange}\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\" className=\"login-btn\">\r\n\t\t\t\t\tsubmit\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"toggle-form-btn\"\r\n\t\t\t\t\tonClick={this.toggleFormType}\r\n\t\t\t\t>\r\n\t\t\t\t\tNew user?\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"forgot-password-btn\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\talert('Tough Luck');\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tForgot Password?\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\r\n\t\tconst { loggedInUser } = this.props;\r\n\t\tconst { formType } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<main className=\"login-container page\">\r\n\t\t\t\t{/* <h2> Login / Signup </h2> */}\r\n\t\t\t\t<p>{this.state.msg}</p>\r\n\t\t\t\t{loggedInUser && <button onClick={this.props.logout}>logged out</button>}\r\n\t\t\t\t\r\n\t\t\t\t<section className=\"login-forms-container\">\r\n\t\t\t\t\t{!loggedInUser && formType === 'login' && loginSection}\r\n\t\t\t\t\t{!loggedInUser && formType === 'signup' && signupSection}\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t{loggedInUser && loggedInUser.isAdmin && (\r\n\t\t\t\t\t<section className=\"admin\">\r\n\t\t\t\t\t\t<details>\r\n\t\t\t\t\t\t\t<summary>Admin</summary>\r\n\t\t\t\t\t\t\t<button onClick={this.props.loadUsers}>Refresh Users</button>\r\n\t\t\t\t\t\t\t{this.props.isLoading && 'Loading...'}\r\n\t\t\t\t\t\t\t{this.props.users && (\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t{this.props.users.map((user) => (\r\n\t\t\t\t\t\t\t\t\t\t<li key={user._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<pre>{JSON.stringify(user, null, 2)}</pre>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.removeUser(user._id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tRemove {user.username}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</details>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t)}\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers: state.userModule.users,\r\n\t\tloggedInUser: state.userModule.loggedInUser,\r\n\t\tisLoading: state.systemModule.isLoading,\r\n\t};\r\n};\r\nconst mapDispatchToProps = {\r\n\tlogin,\r\n\tlogout,\r\n\tsignup,\r\n\tremoveUser,\r\n\tloadUsers,\r\n};\r\n\r\nexport const LoginSignup = connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(_LoginSignup);\r\n"]},"metadata":{},"sourceType":"module"}