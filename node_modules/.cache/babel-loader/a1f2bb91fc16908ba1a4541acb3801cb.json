{"ast":null,"code":"import { orderService } from '../../services/order-service';\nimport { userService } from '../../services/user-service';\nexport function loadOrders(user) {\n  return async dispatch => {\n    try {\n      const orders = await orderService.query(user);\n      dispatch({\n        type: 'SET_ORDERS',\n        orders\n      });\n    } catch (err) {\n      console.log('OrderActions: err in loadOrders', err);\n    }\n  };\n}\nexport function addOrder(trip, stay, loggedInUser) {\n  return async dispatch => {\n    try {\n      const addedOrder = await orderService.add(trip, stay, loggedInUser);\n      dispatch({\n        type: 'ADD_ORDER',\n        order: addedOrder\n      }); // const score = await userService.increaseScore()\n      // dispatch({ type: 'SET_SCORE', score })\n    } catch (err) {\n      console.log('OrderActions: err in addOrder', err);\n    }\n  };\n}\nexport function removeOrder(orderId) {\n  return async dispatch => {\n    try {\n      await orderService.remove(orderId);\n      dispatch({\n        type: 'REMOVE_ORDER',\n        orderId\n      });\n    } catch (err) {\n      console.log('OrderActions: err in removeOrder', err);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/store/actions/orderActions.js"],"names":["orderService","userService","loadOrders","user","dispatch","orders","query","type","err","console","log","addOrder","trip","stay","loggedInUser","addedOrder","add","order","removeOrder","orderId","remove"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAGA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAG,MAAML,YAAY,CAACM,KAAb,CAAmBH,IAAnB,CAArB;AACAC,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,YAAR;AAAsBF,QAAAA;AAAtB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAA/C;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASG,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,YAA9B,EAA4C;AACjD,SAAO,MAAMV,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMW,UAAU,GAAG,MAAMf,YAAY,CAACgB,GAAb,CAAiBJ,IAAjB,EAAuBC,IAAvB,EAA6BC,YAA7B,CAAzB;AACAV,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBU,QAAAA,KAAK,EAAEF;AAA5B,OAAD,CAAR,CAFE,CAIF;AACA;AAED,KAPD,CAOE,OAAOP,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAA7C;AACD;AACF,GAXD;AAYD;AAED,OAAO,SAASU,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAO,MAAMf,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMJ,YAAY,CAACoB,MAAb,CAAoBD,OAApB,CAAN;AACAf,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,cAAR;AAAwBY,QAAAA;AAAxB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOX,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,GAAhD;AACD;AACF,GAPD;AAQD","sourcesContent":["import { orderService } from '../../services/order-service'\r\nimport { userService } from '../../services/user-service'\r\n\r\n\r\nexport function loadOrders(user) {\r\n  return async dispatch => {\r\n    try {\r\n      const orders = await orderService.query(user)\r\n      dispatch({ type: 'SET_ORDERS', orders })\r\n    } catch (err) {\r\n      console.log('OrderActions: err in loadOrders', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addOrder(trip ,stay, loggedInUser) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedOrder = await orderService.add(trip, stay, loggedInUser)\r\n      dispatch({ type: 'ADD_ORDER', order: addedOrder })\r\n\r\n      // const score = await userService.increaseScore()\r\n      // dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('OrderActions: err in addOrder', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeOrder(orderId) {\r\n  return async dispatch => {\r\n    try {\r\n      await orderService.remove(orderId)\r\n      dispatch({ type: 'REMOVE_ORDER', orderId })\r\n    } catch (err) {\r\n      console.log('OrderActions: err in removeOrder', err)\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}