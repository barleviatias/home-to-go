{"ast":null,"code":"import { orderService } from '../../services/order-service';\nimport { userService } from '../../services/user-service';\nexport function loadOrders() {\n  return async dispatch => {\n    try {\n      const orders = await orderService.query();\n      dispatch({\n        type: 'SET_ORDERS',\n        orders\n      });\n    } catch (err) {\n      console.log('OrderActions: err in loadOrders', err);\n    }\n  };\n}\nexport function addOrder(order) {\n  console.log('action:', order);\n  return async dispatch => {\n    try {\n      const addedOrder = await orderService.add(order);\n      dispatch({\n        type: 'ADD_ORDER',\n        order: addedOrder\n      }); // const score = await userService.increaseScore()\n      // dispatch({ type: 'SET_SCORE', score })\n    } catch (err) {\n      console.log('OrderActions: err in addOrder', err);\n    }\n  };\n}\nexport function removeOrder(orderId) {\n  return async dispatch => {\n    try {\n      await orderService.remove(orderId);\n      dispatch({\n        type: 'REMOVE_ORDER',\n        orderId\n      });\n    } catch (err) {\n      console.log('OrderActions: err in removeOrder', err);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/store/actions/orderActions.js"],"names":["orderService","userService","loadOrders","dispatch","orders","query","type","err","console","log","addOrder","order","addedOrder","add","removeOrder","orderId","remove"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAGA,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMJ,YAAY,CAACK,KAAb,EAArB;AACAF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,YAAR;AAAsBF,QAAAA;AAAtB,OAAD,CAAR;AAED,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAA/C;AACD;AACF,GARD;AASD;AAED,OAAO,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AAC9BH,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACA,SAAO,MAAMR,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMS,UAAU,GAAG,MAAMZ,YAAY,CAACa,GAAb,CAAiBF,KAAjB,CAAzB;AACAR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBK,QAAAA,KAAK,EAAEC;AAA5B,OAAD,CAAR,CAFE,CAIF;AACA;AAED,KAPD,CAOE,OAAOL,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAA7C;AACD;AACF,GAXD;AAYD;AAED,OAAO,SAASO,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAO,MAAMZ,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMH,YAAY,CAACgB,MAAb,CAAoBD,OAApB,CAAN;AACAZ,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,cAAR;AAAwBS,QAAAA;AAAxB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOR,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,GAAhD;AACD;AACF,GAPD;AAQD","sourcesContent":["import { orderService } from '../../services/order-service'\r\nimport { userService } from '../../services/user-service'\r\n\r\n\r\nexport function loadOrders() {\r\n  return async dispatch => {\r\n    try {\r\n      const orders = await orderService.query()\r\n      dispatch({ type: 'SET_ORDERS', orders })\r\n\r\n    } catch (err) {\r\n      console.log('OrderActions: err in loadOrders', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addOrder(order) {\r\n  console.log('action:' ,order);\r\n  return async dispatch => {\r\n    try {\r\n      const addedOrder = await orderService.add(order)\r\n      dispatch({ type: 'ADD_ORDER', order: addedOrder })\r\n\r\n      // const score = await userService.increaseScore()\r\n      // dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('OrderActions: err in addOrder', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeOrder(orderId) {\r\n  return async dispatch => {\r\n    try {\r\n      await orderService.remove(orderId)\r\n      dispatch({ type: 'REMOVE_ORDER', orderId })\r\n    } catch (err) {\r\n      console.log('OrderActions: err in removeOrder', err)\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}