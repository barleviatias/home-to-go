{"ast":null,"code":"import { storageService } from './asyncStorageService'; // import axios from 'axios'\n// import { httpService } from './http.service'\n// const SCORE_FOR_REVIEW = 10\n// const IMG_API_KEY = '20031048-f5c2a8cb9ae058a58da123891'\n\nexport const stayService = {\n  query,\n  getById,\n  remove,\n  update,\n  add,\n  getTopRatedStays,\n  getNearbyStays // getStayImage,\n  // getPriceData,\n  // getDateData\n\n};\nwindow.stayService = stayService; // Note: due to async, must run one by one...\n// stayService.signup({fullname: 'Puki Norma', stayname: 'stay1', password:'123',score: 100, isAdmin: false})\n// stayService.signup({fullname: 'Master Adminov', stayname: 'admin', password:'123', score: 100, isAdmin: true})\n// stayService.signup({fullname: 'Muki G', stayname: 'muki', password:'123', score: 100})\n\nfunction query(trip) {\n  return storageService.query('stay', trip); // var queryStr = `?availability=${filterBy.availability}&searchTxt=${filterBy.searchTxt}&sortBy=${filterBy.sortBy}&type=${filterBy.type}`\n  // return httpService.get(`stay${queryStr}`)\n}\n\nfunction getById(stayId) {\n  return storageService.get('stay', stayId); // return httpService.get(`stay/${stayId}`)\n}\n\nfunction remove(stayId) {\n  return storageService.remove('stay', stayId); // return httpService.delete(`stay/${stayId}`)\n}\n\nasync function update(stay) {\n  return storageService.put('stay', stay); // return await httpService.put(`stay/${stay._id}`, stay)\n  // Handle case in which admin updates other stay's details\n  // if (getLoggedinStay()._id === stay._id) _saveLocalStay(stay)\n}\n\nasync function add(stay) {\n  return storageService.put('stay', stay); // stay.imgUrl = await getStayImage(stay.name)\n  // stay.msgs = []\n  // return await httpService.post(`stay`, stay)\n  // Handle case in which admin updates other stay's details\n  // if (getLoggedinStay()._id === stay._id) _saveLocalStay(stay)\n} // async function getTopRatedStays(stays) {\n//     stays = stays.map(stay => {\n//         stay.avgRate = _getRate(stay);\n//         return stay\n//     })\n//     stays.sort(function (a, b) {\n//         return b.avgRate - a.avgRate\n//     })\n//     return stays.slice(0, 4)\n//     // var queryStr = `?availability=${filterBy.availability}&searchTxt=${filterBy.searchTxt}&sortBy=${filterBy.sortBy}&type=${filterBy.type}`\n//     // return httpService.get(`stay${queryStr}`)\n// }\n\n\nfunction getTopRatedStays(stays) {\n  stays = stays.map(stay => {\n    stay.avgRate = _getRate(stay);\n    return stay;\n  });\n  stays.sort(function (a, b) {\n    return b.avgRate - a.avgRate;\n  });\n  return stays.slice(0, 4); // var queryStr = `?availability=${filterBy.availability}&searchTxt=${filterBy.searchTxt}&sortBy=${filterBy.sortBy}&type=${filterBy.type}`\n  // return httpService.get(`stay${queryStr}`)\n}\n\nfunction _getRate(stay) {\n  const rates = stay.reviews.map(review => review.avgRate);\n  const sum = rates.reduce((acc, rate) => {\n    acc += rate;\n    return acc;\n  }, 0);\n  return sum / rates.length;\n}\n\nfunction getNearbyStays(stays, location) {\n  stays = stays.filter(stay => {\n    return stay.loc.address.toUpperCase().includes(location.toUpperCase());\n  });\n  return stays.slice(0, 4); // var queryStr = `?availability=${filterBy.availability}&searchTxt=${filterBy.searchTxt}&sortBy=${filterBy.sortBy}&type=${filterBy.type}`\n  // return httpService.get(`stay${queryStr}`)\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/services/stay-service.js"],"names":["storageService","stayService","query","getById","remove","update","add","getTopRatedStays","getNearbyStays","window","trip","stayId","get","stay","put","stays","map","avgRate","_getRate","sort","a","b","slice","rates","reviews","review","sum","reduce","acc","rate","length","location","filter","loc","address","toUpperCase","includes"],"mappings":"AAAA,SAASA,cAAT,QAA+B,uBAA/B,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,OAFuB;AAGvBC,EAAAA,MAHuB;AAIvBC,EAAAA,MAJuB;AAKvBC,EAAAA,GALuB;AAMvBC,EAAAA,gBANuB;AAOvBC,EAAAA,cAPuB,CAQvB;AACA;AACA;;AAVuB,CAApB;AAaPC,MAAM,CAACR,WAAP,GAAqBA,WAArB,C,CACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,CAAeQ,IAAf,EAAqB;AACjB,SAAOV,cAAc,CAACE,KAAf,CAAqB,MAArB,EAA6BQ,IAA7B,CAAP,CADiB,CAGjB;AACA;AACH;;AAED,SAASP,OAAT,CAAiBQ,MAAjB,EAAyB;AACrB,SAAOX,cAAc,CAACY,GAAf,CAAmB,MAAnB,EAA2BD,MAA3B,CAAP,CADqB,CAErB;AACH;;AAED,SAASP,MAAT,CAAgBO,MAAhB,EAAwB;AACpB,SAAOX,cAAc,CAACI,MAAf,CAAsB,MAAtB,EAA8BO,MAA9B,CAAP,CADoB,CAEpB;AACH;;AAED,eAAeN,MAAf,CAAsBQ,IAAtB,EAA4B;AACxB,SAAOb,cAAc,CAACc,GAAf,CAAmB,MAAnB,EAA2BD,IAA3B,CAAP,CADwB,CAExB;AACA;AACA;AACH;;AAED,eAAeP,GAAf,CAAmBO,IAAnB,EAAyB;AACrB,SAAOb,cAAc,CAACc,GAAf,CAAmB,MAAnB,EAA2BD,IAA3B,CAAP,CADqB,CAErB;AACA;AACA;AACA;AACA;AACH,C,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,gBAAT,CAA0BQ,KAA1B,EAAiC;AAC7BA,EAAAA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAUH,IAAI,IAAI;AACtBA,IAAAA,IAAI,CAACI,OAAL,GAAeC,QAAQ,CAACL,IAAD,CAAvB;AACA,WAAOA,IAAP;AACH,GAHO,CAAR;AAIAE,EAAAA,KAAK,CAACI,IAAN,CAAW,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACvB,WAAOA,CAAC,CAACJ,OAAF,GAAYG,CAAC,CAACH,OAArB;AACH,GAFD;AAGA,SAAOF,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAP,CAR6B,CAS7B;AACA;AACH;;AAED,SAASJ,QAAT,CAAkBL,IAAlB,EAAwB;AACpB,QAAMU,KAAK,GAAGV,IAAI,CAACW,OAAL,CAAaR,GAAb,CAAiBS,MAAM,IAAIA,MAAM,CAACR,OAAlC,CAAd;AACA,QAAMS,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa,CAACC,GAAD,EAAMC,IAAN,KAAe;AACpCD,IAAAA,GAAG,IAAIC,IAAP;AACA,WAAOD,GAAP;AACH,GAHW,EAGT,CAHS,CAAZ;AAIA,SAAOF,GAAG,GAAGH,KAAK,CAACO,MAAnB;AACH;;AAED,SAAStB,cAAT,CAAwBO,KAAxB,EAA+BgB,QAA/B,EAAyC;AACrChB,EAAAA,KAAK,GAAGA,KAAK,CAACiB,MAAN,CAAanB,IAAI,IAAI;AACzB,WAAOA,IAAI,CAACoB,GAAL,CAASC,OAAT,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCL,QAAQ,CAACI,WAAT,EAAxC,CAAP;AACH,GAFO,CAAR;AAGA,SAAOpB,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAP,CAJqC,CAKrC;AACA;AACH","sourcesContent":["import { storageService } from './asyncStorageService'\r\n\r\n// import axios from 'axios'\r\n// import { httpService } from './http.service'\r\n// const SCORE_FOR_REVIEW = 10\r\n// const IMG_API_KEY = '20031048-f5c2a8cb9ae058a58da123891'\r\n\r\nexport const stayService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    update,\r\n    add,\r\n    getTopRatedStays,\r\n    getNearbyStays\r\n    // getStayImage,\r\n    // getPriceData,\r\n    // getDateData\r\n}\r\n\r\nwindow.stayService = stayService\r\n// Note: due to async, must run one by one...\r\n// stayService.signup({fullname: 'Puki Norma', stayname: 'stay1', password:'123',score: 100, isAdmin: false})\r\n// stayService.signup({fullname: 'Master Adminov', stayname: 'admin', password:'123', score: 100, isAdmin: true})\r\n// stayService.signup({fullname: 'Muki G', stayname: 'muki', password:'123', score: 100})\r\n\r\nfunction query(trip) {\r\n    return storageService.query('stay', trip)\r\n\r\n    // var queryStr = `?availability=${filterBy.availability}&searchTxt=${filterBy.searchTxt}&sortBy=${filterBy.sortBy}&type=${filterBy.type}`\r\n    // return httpService.get(`stay${queryStr}`)\r\n}\r\n\r\nfunction getById(stayId) {\r\n    return storageService.get('stay', stayId)\r\n    // return httpService.get(`stay/${stayId}`)\r\n}\r\n\r\nfunction remove(stayId) {\r\n    return storageService.remove('stay', stayId)\r\n    // return httpService.delete(`stay/${stayId}`)\r\n}\r\n\r\nasync function update(stay) {\r\n    return storageService.put('stay', stay)\r\n    // return await httpService.put(`stay/${stay._id}`, stay)\r\n    // Handle case in which admin updates other stay's details\r\n    // if (getLoggedinStay()._id === stay._id) _saveLocalStay(stay)\r\n}\r\n\r\nasync function add(stay) {\r\n    return storageService.put('stay', stay)\r\n    // stay.imgUrl = await getStayImage(stay.name)\r\n    // stay.msgs = []\r\n    // return await httpService.post(`stay`, stay)\r\n    // Handle case in which admin updates other stay's details\r\n    // if (getLoggedinStay()._id === stay._id) _saveLocalStay(stay)\r\n}\r\n\r\n\r\n\r\n// async function getTopRatedStays(stays) {\r\n//     stays = stays.map(stay => {\r\n//         stay.avgRate = _getRate(stay);\r\n//         return stay\r\n//     })\r\n//     stays.sort(function (a, b) {\r\n//         return b.avgRate - a.avgRate\r\n//     })\r\n//     return stays.slice(0, 4)\r\n//     // var queryStr = `?availability=${filterBy.availability}&searchTxt=${filterBy.searchTxt}&sortBy=${filterBy.sortBy}&type=${filterBy.type}`\r\n//     // return httpService.get(`stay${queryStr}`)\r\n// }\r\nfunction getTopRatedStays(stays) {\r\n    stays = stays.map(stay => {\r\n        stay.avgRate = _getRate(stay);\r\n        return stay\r\n    })\r\n    stays.sort(function (a, b) {\r\n        return b.avgRate - a.avgRate\r\n    })\r\n    return stays.slice(0, 4)\r\n    // var queryStr = `?availability=${filterBy.availability}&searchTxt=${filterBy.searchTxt}&sortBy=${filterBy.sortBy}&type=${filterBy.type}`\r\n    // return httpService.get(`stay${queryStr}`)\r\n}\r\n\r\nfunction _getRate(stay) {\r\n    const rates = stay.reviews.map(review => review.avgRate)\r\n    const sum = rates.reduce((acc, rate) => {\r\n        acc += rate\r\n        return acc\r\n    }, 0)\r\n    return sum / rates.length\r\n}\r\n\r\nfunction getNearbyStays(stays, location) {\r\n    stays = stays.filter(stay => {\r\n        return stay.loc.address.toUpperCase().includes(location.toUpperCase())\r\n    })\r\n    return stays.slice(0, 4)\r\n    // var queryStr = `?availability=${filterBy.availability}&searchTxt=${filterBy.searchTxt}&sortBy=${filterBy.sortBy}&type=${filterBy.type}`\r\n    // return httpService.get(`stay${queryStr}`)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}