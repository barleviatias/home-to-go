{"ast":null,"code":"import { stayService } from '../../services/stay-service';\nimport { userService } from '../../services/user-service';\nexport function loadStays(trip) {\n  return async dispatch => {\n    try {\n      const stays = await stayService.query(trip);\n      dispatch({\n        type: 'SET_STAYS',\n        stays\n      });\n    } catch (err) {\n      console.log('StayActions: err in loadStays', err);\n    }\n  };\n}\nexport function addStay(stay) {\n  return async dispatch => {\n    try {\n      const addedStay = await stayService.add(stay);\n      dispatch({\n        type: 'ADD_STAY',\n        stay: addedStay\n      });\n      const score = await userService.increaseScore();\n      dispatch({\n        type: 'SET_SCORE',\n        score\n      });\n    } catch (err) {\n      console.log('StayActions: err in addStay', err);\n    }\n  };\n}\nexport function removeStay(stayId) {\n  return async dispatch => {\n    try {\n      await stayService.remove(stayId);\n      dispatch({\n        type: 'REMOVE_STAY',\n        stayId\n      });\n    } catch (err) {\n      console.log('StayActions: err in removeStay', err);\n    }\n  };\n}\nexport function loadHostStays(hostId) {\n  return async dispatch => {\n    try {\n      const stays = await stayService.getHostStays(hostId);\n      dispatch({\n        type: 'SET_HOST_STAYS',\n        stays\n      });\n    } catch (err) {\n      console.log('StayActions: err in loadHostStays', err);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/store/actions/stayActions.js"],"names":["stayService","userService","loadStays","trip","dispatch","stays","query","type","err","console","log","addStay","stay","addedStay","add","score","increaseScore","removeStay","stayId","remove","loadHostStays","hostId","getHostStays"],"mappings":"AAAA,SAASA,WAAT,QAA4B,6BAA5B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAGA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,KAAK,GAAG,MAAML,WAAW,CAACM,KAAZ,CAAkBH,IAAlB,CAApB;AACAC,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBF,QAAAA;AAArB,OAAD,CAAR;AAED,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAA7C;AACD;AACF,GARD;AASD;AAED,OAAO,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAO,MAAMR,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMS,SAAS,GAAG,MAAMb,WAAW,CAACc,GAAZ,CAAgBF,IAAhB,CAAxB;AACAR,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBK,QAAAA,IAAI,EAAEC;AAA1B,OAAD,CAAR;AAEA,YAAME,KAAK,GAAG,MAAMd,WAAW,CAACe,aAAZ,EAApB;AACAZ,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBQ,QAAAA;AAArB,OAAD,CAAR;AAED,KAPD,CAOE,OAAOP,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAA3C;AACD;AACF,GAXD;AAYD;AAED,OAAO,SAASS,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAO,MAAMd,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMJ,WAAW,CAACmB,MAAZ,CAAmBD,MAAnB,CAAN;AACAd,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,aAAR;AAAuBW,QAAAA;AAAvB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOV,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,GAA9C;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASY,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,SAAO,MAAMjB,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,KAAK,GAAG,MAAML,WAAW,CAACsB,YAAZ,CAAyBD,MAAzB,CAApB;AACAjB,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,gBAAR;AAA0BF,QAAAA;AAA1B,OAAD,CAAR;AAED,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAjD;AACD;AACF,GARD;AASD","sourcesContent":["import { stayService } from '../../services/stay-service'\r\nimport { userService } from '../../services/user-service'\r\n\r\n\r\nexport function loadStays(trip) {\r\n  return async dispatch => {\r\n    try {\r\n      const stays = await stayService.query(trip)\r\n      dispatch({ type: 'SET_STAYS', stays })\r\n\r\n    } catch (err) {\r\n      console.log('StayActions: err in loadStays', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addStay(stay) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedStay = await stayService.add(stay)\r\n      dispatch({ type: 'ADD_STAY', stay: addedStay })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('StayActions: err in addStay', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeStay(stayId) {\r\n  return async dispatch => {\r\n    try {\r\n      await stayService.remove(stayId)\r\n      dispatch({ type: 'REMOVE_STAY', stayId })\r\n    } catch (err) {\r\n      console.log('StayActions: err in removeStay', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadHostStays(hostId) {\r\n  return async dispatch => {\r\n    try {\r\n      const stays = await stayService.getHostStays(hostId)\r\n      dispatch({ type: 'SET_HOST_STAYS', stays })\r\n\r\n    } catch (err) {\r\n      console.log('StayActions: err in loadHostStays', err)\r\n    }\r\n  }\r\n} "]},"metadata":{},"sourceType":"module"}