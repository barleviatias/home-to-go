{"ast":null,"code":"import user from '../data/user.json';\nimport stay from '../data/stay.json';\nimport order from '../data/order.json';\nexport const storageService = {\n  query,\n  get,\n  post,\n  put,\n  remove\n};\nloadDB();\n\nfunction loadDB() {\n  var userDB = JSON.parse(localStorage.getItem('user')) || [];\n  var stayDB = JSON.parse(localStorage.getItem('stay')) || [];\n  var orderDB = JSON.parse(localStorage.getItem('order')) || [];\n\n  if (!userDB || !userDB.length) {\n    _save('user', user);\n  }\n\n  if (!stayDB || !stayDB.length) {\n    _save('stay', stay);\n  }\n\n  if (!orderDB || !orderDB.length) {\n    _save('order', order);\n  }\n}\n\nfunction query(entityType, trip = {\n  guests: {\n    adults: 0,\n    kids: 0\n  },\n  loc: {\n    address: ''\n  },\n  time: {\n    checkIn: '',\n    checkOut: ''\n  }\n}, user = null) {\n  console.log(user);\n  var entities = JSON.parse(localStorage.getItem(entityType)) || [];\n\n  if (entityType === 'stay') {\n    if (user && user._id) {\n      console.log(user);\n      console.log('jet');\n      entities = _filterByWhishList(entities, user.whishlist);\n    } else {\n      entities = _filterByTripInfo(entities, trip);\n    }\n  } // if (entityType === 'whishlist') entities = _filterByWhishList(entities, trip)\n\n\n  return Promise.resolve(entities);\n}\n\nfunction _filterByTripInfo(entities, {\n  loc,\n  guests\n}) {\n  const address = loc.address.toUpperCase();\n  const capacity = guests.adults + guests.kids;\n  var filteredEntities = entities.filter(entitie => {\n    return entitie.loc.address.toUpperCase().includes(address) && capacity <= entitie.capacity;\n  });\n  return filteredEntities;\n}\n\nfunction _filterByWhishList(entities, whishlist) {\n  // const address = loc.address.toUpperCase();\n  // const capacity = guests.adults + guests.kids;\n  const wish = whishlist.map(entityId => {\n    return entities.find(entitie => {\n      return entitie._id === entityId;\n    });\n  });\n  console.log(wish);\n}\n\nfunction get(entityType, entityId) {\n  return query(entityType).then(entities => entities.find(entity => entity._id === entityId));\n}\n\nfunction post(entityType, newEntity) {\n  newEntity._id = _makeId();\n  return query(entityType).then(entities => {\n    entities.push(newEntity);\n\n    _save(entityType, entities);\n\n    return newEntity;\n  });\n}\n\nfunction put(entityType, updatedEntity) {\n  return query(entityType).then(entities => {\n    const idx = entities.findIndex(entity => entity._id === updatedEntity._id);\n    entities.splice(idx, 1, updatedEntity);\n\n    _save(entityType, entities);\n\n    return updatedEntity;\n  });\n}\n\nfunction remove(entityType, entityId) {\n  return query(entityType).then(entities => {\n    const idx = entities.findIndex(entity => entity._id === entityId);\n    entities.splice(idx, 1);\n\n    _save(entityType, entities);\n  });\n}\n\nfunction _save(entityType, entities) {\n  localStorage.setItem(entityType, JSON.stringify(entities));\n}\n\nfunction _makeId(length = 5) {\n  var text = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/services/asyncStorageService.js"],"names":["user","stay","order","storageService","query","get","post","put","remove","loadDB","userDB","JSON","parse","localStorage","getItem","stayDB","orderDB","length","_save","entityType","trip","guests","adults","kids","loc","address","time","checkIn","checkOut","console","log","entities","_id","_filterByWhishList","whishlist","_filterByTripInfo","Promise","resolve","toUpperCase","capacity","filteredEntities","filter","entitie","includes","wish","map","entityId","find","then","entity","newEntity","_makeId","push","updatedEntity","idx","findIndex","splice","setItem","stringify","text","possible","i","charAt","Math","floor","random"],"mappings":"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","sourcesContent":["import user from '../data/user.json'\r\nimport stay from '../data/stay.json'\r\nimport order from '../data/order.json'\r\n\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove\r\n}\r\n\r\nloadDB()\r\n\r\nfunction loadDB() {\r\n    var userDB = JSON.parse(localStorage.getItem('user')) || []\r\n    var stayDB = JSON.parse(localStorage.getItem('stay')) || []\r\n    var orderDB = JSON.parse(localStorage.getItem('order')) || []\r\n\r\n    if (!userDB || !userDB.length) {\r\n        _save('user', user)\r\n    }\r\n    if (!stayDB || !stayDB.length) {\r\n        _save('stay', stay)\r\n    }\r\n    if (!orderDB || !orderDB.length) {\r\n        _save('order', order)\r\n    }\r\n}\r\n\r\nfunction query(entityType , trip = { guests: { adults: 0, kids: 0}, loc: { address: '' }, time: { checkIn: '', checkOut: '' } },user=null) {\r\n    console.log(user);\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    if (entityType === 'stay'){\r\n        if(user && user._id ){\r\n            console.log(user);\r\n            console.log('jet');\r\n            entities= _filterByWhishList(entities,user.whishlist)\r\n        }else{\r\n            entities = _filterByTripInfo(entities, trip)\r\n        }\r\n    } \r\n    // if (entityType === 'whishlist') entities = _filterByWhishList(entities, trip)\r\n    return Promise.resolve(entities)\r\n}\r\n\r\nfunction _filterByTripInfo(entities, { loc, guests }) {\r\n\r\n    const address = loc.address.toUpperCase();\r\n    const capacity = guests.adults + guests.kids;\r\n    var filteredEntities = entities.filter((entitie) => {\r\n        return entitie.loc.address.toUpperCase().includes(address) && capacity <= entitie.capacity;\r\n    })\r\n    return filteredEntities\r\n}\r\nfunction _filterByWhishList(entities, whishlist) {\r\n\r\n    // const address = loc.address.toUpperCase();\r\n    // const capacity = guests.adults + guests.kids;\r\n    const wish = whishlist.map((entityId)=>{\r\n         return entities.find((entitie) => {\r\n            return entitie._id===entityId\r\n        })\r\n    }\r\n    )\r\n    console.log(wish)\r\n}\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}"]},"metadata":{},"sourceType":"module"}