{"ast":null,"code":"const initialState = {\n  orders: []\n};\nexport function orderReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case 'SET_ORDERS':\n      return { ...state,\n        orders: action.orders\n      };\n\n    case 'ADD_ORDER':\n      return { ...state,\n        orders: [...state.orders, action.order]\n      };\n\n    case 'REMOVE_ORDER':\n      return { ...state,\n        orders: state.orders.filter(order => order._id !== action.orderId)\n      };\n\n    case 'UPDATE_ORDER':\n      return { ...state,\n        orders: state.orders.map(order => order._id === action.order._id ? action.order : order)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/store/reducers/orderReducer.js"],"names":["initialState","orders","orderReducer","state","action","type","order","filter","_id","orderId","map"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;AAIA,OAAO,SAASC,YAAT,CAAsBC,KAAK,GAAGH,YAA9B,EAA4CI,MAAM,GAAG,EAArD,EAAyD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYF,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAA3B,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBG,MAAM,CAACE,KAAzB;AAApB,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaM,MAAb,CAAoBD,KAAK,IAAIA,KAAK,CAACE,GAAN,KAAcJ,MAAM,CAACK,OAAlD;AAApB,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaS,GAAb,CAAiBJ,KAAK,IAC5BA,KAAK,CAACE,GAAN,KAAcJ,MAAM,CAACE,KAAP,CAAaE,GAA3B,GAAiCJ,MAAM,CAACE,KAAxC,GAAgDA,KAD1C;AAFH,OAAP;;AAKF;AACE,aAAOH,KAAP;AAdJ;AAgBD","sourcesContent":["const initialState = {\r\n  orders: [],\r\n}\r\n\r\nexport function orderReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_ORDERS':\r\n      return { ...state, orders: action.orders }\r\n    case 'ADD_ORDER':\r\n      return { ...state, orders: [...state.orders, action.order] }\r\n    case 'REMOVE_ORDER':\r\n      return { ...state, orders: state.orders.filter(order => order._id !== action.orderId) }\r\n    case 'UPDATE_ORDER':\r\n      return {\r\n        ...state,\r\n        orders: state.orders.map(order =>\r\n          order._id === action.order._id ? action.order : order\r\n        )}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}