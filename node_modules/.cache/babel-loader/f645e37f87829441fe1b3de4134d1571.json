{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bar-PC\\\\Desktop\\\\sprint 4\\\\src\\\\cmps\\\\Upload.jsx\";\nimport { Component } from 'react';\nimport { cloudinaryService } from '../services/cloudinary-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imgUrl: null,\n      height: 60,\n      width: 60,\n      isUploading: false\n    };\n\n    this.uploadImg = async ev => {\n      this.setState({\n        isUploading: true\n      });\n      const {\n        secure_url,\n        height,\n        width\n      } = await cloudinaryService.uploadImg(ev);\n      this.setState({\n        isUploading: false,\n        imgUrl: secure_url,\n        height,\n        width\n      }, () => {\n        this.props.onUploadImg(this.state);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      userImgUrl\n    } = this.props;\n    console.log('cmp did mount', this.props);\n    if (userImgUrl) this.setState({\n      imgUrl: userImgUrl\n    });\n    console.log('cmp did mount', this.state);\n  }\n\n  get uploadMsg() {\n    const {\n      imgUrl,\n      isUploading\n    } = this.state;\n    if (imgUrl) return 'Upload Another?';\n    return isUploading ? 'Uploading....' : 'Upload Image';\n  }\n\n  render() {\n    console.log('state', this.state);\n    const {\n      imgUrl\n    } = this.state;\n    console.log('imgurl', imgUrl);\n    const previewStyle = {\n      backgroundImage: `url(${imgUrl})`\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-preview\",\n      style: previewStyle,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"img-upload-label\",\n        htmlFor: \"imgUpload\",\n        children: [this.uploadMsg, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.uploadImg,\n          accept: \"img/*\",\n          className: \"img-upload-btn\",\n          id: \"imgUpload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/cmps/Upload.jsx"],"names":["Component","cloudinaryService","Upload","state","imgUrl","height","width","isUploading","uploadImg","ev","setState","secure_url","props","onUploadImg","componentDidMount","userImgUrl","console","log","uploadMsg","render","previewStyle","backgroundImage"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,WAAW,EAAE;AAJP,KAD4B;;AAAA,SAepCC,SAfoC,GAexB,MAAOC,EAAP,IAAc;AACxB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,YAAM;AAAEI,QAAAA,UAAF;AAAcN,QAAAA,MAAd;AAAsBC,QAAAA;AAAtB,UAAgC,MAAML,iBAAiB,CAACO,SAAlB,CAA4BC,EAA5B,CAA5C;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE,KAAf;AAAsBH,QAAAA,MAAM,EAAEO,UAA9B;AAA0CN,QAAAA,MAA1C;AAAkDC,QAAAA;AAAlD,OAAd,EAAyE,MAAM;AAAE,aAAKM,KAAL,CAAWC,WAAX,CAAuB,KAAKV,KAA5B;AAAoC,OAArH;AACD,KAnBmC;AAAA;;AAQpCW,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKH,KAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,KAAKL,KAAjC;AACA,QAAIG,UAAJ,EAAgB,KAAKL,QAAL,CAAc;AAAEN,MAAAA,MAAM,EAAEW;AAAV,KAAd;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,KAAKd,KAAjC;AACD;;AAOY,MAATe,SAAS,GAAG;AACd,UAAM;AAAEd,MAAAA,MAAF;AAAUG,MAAAA;AAAV,QAA0B,KAAKJ,KAArC;AACA,QAAIC,MAAJ,EAAY,OAAO,iBAAP;AACZ,WAAOG,WAAW,GAAG,eAAH,GAAqB,cAAvC;AACD;;AACDY,EAAAA,MAAM,GAAG;AAKPH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKd,KAAzB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBb,MAArB;AACA,UAAMgB,YAAY,GAAG;AACnBC,MAAAA,eAAe,EAAG,OAAMjB,MAAO;AADZ,KAArB;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAEgB,YAAvC;AAAA,6BAEE;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAoC,QAAA,OAAO,EAAC,WAA5C;AAAA,mBAAyD,KAAKF,SAA9D,eACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKV,SAAlC;AAA6C,UAAA,MAAM,EAAC,OAApD;AAA4D,UAAA,SAAS,EAAC,gBAAtE;AAAuF,UAAA,EAAE,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA7CmC","sourcesContent":["import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/cloudinary-service'\r\n\r\nexport class Upload extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 60,\r\n    width: 60,\r\n    isUploading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { userImgUrl } = this.props\r\n    console.log('cmp did mount',this.props);\r\n    if (userImgUrl) this.setState({ imgUrl: userImgUrl })\r\n    console.log('cmp did mount',this.state);\r\n  }\r\n\r\n  uploadImg = async (ev) => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev)\r\n    this.setState({ isUploading: false, imgUrl: secure_url, height, width }, () => { this.props.onUploadImg(this.state) })\r\n  }\r\n  get uploadMsg() {\r\n    const { imgUrl, isUploading } = this.state\r\n    if (imgUrl) return 'Upload Another?'\r\n    return isUploading ? 'Uploading....' : 'Upload Image'\r\n  }\r\n  render() {\r\n\r\n\r\n\r\n\r\n    console.log('state',this.state);\r\n    const { imgUrl } = this.state\r\n    console.log('imgurl',imgUrl);\r\n    const previewStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n\r\n    }\r\n    return (\r\n      <div className=\"upload-preview\" style={previewStyle} >\r\n        {/* <img className=\"stay-img\" src=\"\" alt=\"\" /> */}\r\n        <label className=\"img-upload-label\" htmlFor=\"imgUpload\">{this.uploadMsg}\r\n          <input type=\"file\" onChange={this.uploadImg} accept=\"img/*\" className=\"img-upload-btn\" id=\"imgUpload\" />\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}