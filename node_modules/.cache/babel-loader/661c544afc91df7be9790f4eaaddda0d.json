{"ast":null,"code":"import { userService } from '../../services/user-service'; // import { userService } from '../../store/reducers/'\n// THUNK action creators\n// Work asynchronously with the service and dispatch actions to the reducers \n\nexport function loadUsers() {\n  return async dispatch => {\n    try {\n      // dispatch({ type: 'LOADING_START' })\n      const users = await userService.getUsers();\n      dispatch({\n        type: 'SET_USERS',\n        users\n      });\n    } catch (err) {// console.log('UserActions: err in loadUsers', err)\n    } // finally {\n    //   // dispatch({ type: 'LOADING_DONE' })\n    // }\n\n  };\n}\nexport function removeUser(userId) {\n  return async dispatch => {\n    try {\n      await userService.remove(userId);\n      dispatch({\n        type: 'REMOVE_USER',\n        userId\n      });\n    } catch (err) {\n      console.log('UserActions: err in removeUser', err);\n    }\n  };\n}\nexport function updateUser(user) {\n  return async dispatch => {\n    try {\n      const updatedUser = await userService.update(user);\n      console.log(updatedUser);\n      dispatch({\n        type: 'UPDATE_USER',\n        user: updatedUser\n      });\n    } catch (err) {\n      console.log('UserActions: err in updateUser', err);\n    }\n  };\n}\nexport function login(userCreds) {\n  return async dispatch => {\n    try {\n      const user = await userService.login(userCreds);\n      dispatch({\n        type: 'SET_USER',\n        user\n      });\n    } catch (err) {\n      console.log('UserActions: err in login', err);\n    }\n  };\n}\nexport function signup(userCreds) {\n  return async dispatch => {\n    try {\n      const user = await userService.signup(userCreds);\n      dispatch({\n        type: 'SET_USER',\n        user\n      });\n    } catch (err) {\n      console.log('UserActions: err in signup', err);\n    }\n  };\n}\nexport function logout() {\n  return async dispatch => {\n    try {\n      await userService.logout();\n      dispatch({\n        type: 'SET_USER',\n        user: null\n      });\n    } catch (err) {\n      console.log('UserActions: err in logout', err);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/store/actions/userActions.js"],"names":["userService","loadUsers","dispatch","users","getUsers","type","err","removeUser","userId","remove","console","log","updateUser","user","updatedUser","update","login","userCreds","signup","logout"],"mappings":"AAAA,SAASA,WAAT,QAA4B,6BAA5B,C,CACA;AAEA;AACA;;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1B,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF;AACA,YAAMC,KAAK,GAAG,MAAMH,WAAW,CAACI,QAAZ,EAApB;AACAF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBF,QAAAA;AAArB,OAAD,CAAR;AACD,KAJD,CAIE,OAAOG,GAAP,EAAY,CACZ;AACD,KAPsB,CAQvB;AACA;AACA;;AACD,GAXD;AAYD;AAED,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAO,MAAMN,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMF,WAAW,CAACS,MAAZ,CAAmBD,MAAnB,CAAN;AACAN,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,aAAR;AAAuBG,QAAAA;AAAvB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOF,GAAP,EAAY;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CL,GAA9C;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASM,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO,MAAMX,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMY,WAAW,GAAG,MAAMd,WAAW,CAACe,MAAZ,CAAmBF,IAAnB,CAA1B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACAZ,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,aAAR;AAAuBQ,QAAAA,IAAI,EAAEC;AAA7B,OAAD,CAAR;AACD,KAJD,CAIE,OAAOR,GAAP,EAAY;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CL,GAA9C;AACD;AACF,GARD;AASD;AACD,OAAO,SAASU,KAAT,CAAeC,SAAf,EAA0B;AAC/B,SAAO,MAAMf,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMW,IAAI,GAAG,MAAMb,WAAW,CAACgB,KAAZ,CAAkBC,SAAlB,CAAnB;AACAf,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBQ,QAAAA;AAApB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOP,GAAP,EAAY;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCL,GAAzC;AACD;AACF,GAPD;AAQD;AACD,OAAO,SAASY,MAAT,CAAgBD,SAAhB,EAA2B;AAChC,SAAO,MAAMf,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMW,IAAI,GAAG,MAAMb,WAAW,CAACkB,MAAZ,CAAmBD,SAAnB,CAAnB;AACAf,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBQ,QAAAA;AAApB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOP,GAAP,EAAY;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,GAA1C;AACD;AACF,GAPD;AAQD;AACD,OAAO,SAASa,MAAT,GAAkB;AACvB,SAAO,MAAMjB,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMF,WAAW,CAACmB,MAAZ,EAAN;AACAjB,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBQ,QAAAA,IAAI,EAAE;AAA1B,OAAD,CAAR;AACD,KAHD,CAGE,OAAOP,GAAP,EAAY;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,GAA1C;AACD;AACF,GAPD;AAQD","sourcesContent":["import { userService } from '../../services/user-service'\r\n// import { userService } from '../../store/reducers/'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      // dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      // console.log('UserActions: err in loadUsers', err)\r\n    } \r\n    // finally {\r\n    //   // dispatch({ type: 'LOADING_DONE' })\r\n    // }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateUser(user) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedUser = await userService.update(user)\r\n      console.log(updatedUser);\r\n      dispatch({ type: 'UPDATE_USER', user: updatedUser })\r\n    } catch (err) {\r\n      console.log('UserActions: err in updateUser', err)\r\n    }\r\n  }\r\n}\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}