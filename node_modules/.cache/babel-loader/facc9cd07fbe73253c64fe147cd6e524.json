{"ast":null,"code":"import { stayService } from '../../services/stay-service'; // import { userService } from '../../services/user-service'\n\nexport function loadStays(trip) {\n  return async dispatch => {\n    try {\n      const stays = await stayService.query(trip);\n      dispatch({\n        type: 'SET_STAYS',\n        stays\n      });\n    } catch (err) {\n      console.log('StayActions: err in loadStays', err);\n    }\n  };\n}\nexport function addStay(stay) {\n  return async dispatch => {\n    try {\n      const addedStay = await stayService.add(stay);\n      dispatch({\n        type: 'ADD_STAY',\n        stay: addedStay\n      });\n    } catch (err) {\n      console.log('StayActions: err in addStay', err);\n    }\n  };\n}\nexport function updateStay(stay) {\n  return async dispatch => {\n    try {\n      const updatedStay = await stayService.update(stay);\n      dispatch({\n        type: 'UPDATE_STAY',\n        stay: updatedStay\n      });\n    } catch (err) {\n      console.log('StayActions: err in update Stay', err);\n    }\n  };\n}\nexport function removeStay(stayId) {\n  console.log('id frome action', stayId);\n  return async dispatch => {\n    try {\n      await stayService.remove(stayId);\n      dispatch({\n        type: 'REMOVE_STAY',\n        stayId\n      });\n    } catch (err) {\n      console.log('StayActions: err in removeStay', err);\n    }\n  };\n}\nexport function loadHostStays(hostId) {\n  return async dispatch => {\n    try {\n      const stays = await stayService.getHostStays(hostId);\n      dispatch({\n        type: 'SET_HOST_STAYS',\n        stays\n      });\n    } catch (err) {\n      console.log('StayActions: err in loadHostStays', err);\n    }\n  };\n}\nexport function loadWishlist(user) {\n  return async dispatch => {\n    try {\n      const stays = await stayService.getUserWhishlist(user);\n      dispatch({\n        type: 'SET_HOST_STAYS',\n        stays\n      });\n    } catch (err) {\n      console.log('StayActions: err in loadHostStays', err);\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Bar-PC/Desktop/sprint 4/src/store/actions/stayActions.js"],"names":["stayService","loadStays","trip","dispatch","stays","query","type","err","console","log","addStay","stay","addedStay","add","updateStay","updatedStay","update","removeStay","stayId","remove","loadHostStays","hostId","getHostStays","loadWishlist","user","getUserWhishlist"],"mappings":"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","sourcesContent":["import { stayService } from '../../services/stay-service'\r\n// import { userService } from '../../services/user-service'\r\n\r\n\r\nexport function loadStays(trip) {\r\n  return async dispatch => {\r\n    try {\r\n      const stays = await stayService.query(trip)\r\n      dispatch({ type: 'SET_STAYS', stays })\r\n\r\n    } catch (err) {\r\n      console.log('StayActions: err in loadStays', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addStay(stay) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedStay = await stayService.add(stay)\r\n      dispatch({ type: 'ADD_STAY', stay: addedStay })\r\n\r\n      \r\n    } catch (err) {\r\n      console.log('StayActions: err in addStay', err)\r\n    }\r\n  }\r\n}\r\nexport function updateStay(stay) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedStay = await stayService.update(stay)\r\n      dispatch({ type: 'UPDATE_STAY', stay: updatedStay })\r\n\r\n      \r\n    } catch (err) {\r\n      console.log('StayActions: err in update Stay', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeStay(stayId) {\r\n  console.log('id frome action' , stayId);\r\n  return async dispatch => {\r\n    try {\r\n      await stayService.remove(stayId)\r\n      dispatch({ type: 'REMOVE_STAY', stayId })\r\n    } catch (err) {\r\n      console.log('StayActions: err in removeStay', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadHostStays(hostId) {\r\n  return async dispatch => {\r\n    try {\r\n      const stays = await stayService.getHostStays(hostId)\r\n      dispatch({ type: 'SET_HOST_STAYS', stays })\r\n\r\n    } catch (err) {\r\n      console.log('StayActions: err in loadHostStays', err)\r\n    }\r\n  }\r\n} \r\nexport function loadWishlist(user) {\r\n  return async dispatch => {\r\n    try {\r\n      const stays = await stayService.getUserWhishlist(user)\r\n      dispatch({ type: 'SET_HOST_STAYS', stays })\r\n\r\n    } catch (err) {\r\n      console.log('StayActions: err in loadHostStays', err)\r\n    }\r\n  }\r\n} "]},"metadata":{},"sourceType":"module"}